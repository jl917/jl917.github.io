"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["9992"],{9103:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var a=r(5893),t=r(65);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h3:"h3",pre:"pre",code:"code",h4:"h4"},(0,t.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"schema",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#schema",children:"#"}),"SCHEMA"]}),"\n",(0,a.jsx)(n.p,{children:"你要对 API 包含的数据类型进行统筹，讨论并正式确定下来。 这种类型的集合就是后端程序员所熟知的 schema"}),"\n",(0,a.jsx)(n.p,{children:"schema 优先是一种设计方法论，遵循它可以使团队保持一致的数据类型。"}),"\n",(0,a.jsxs)(n.h3,{id:"type",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type",children:"#"}),"TYPE"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"type Photo {\n  id: ID! # 非空字段 non-nullable\n  name: String!\n  url: String!\n  description: String\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"标量类型-scalar",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#标量类型-scalar",children:"#"}),"标量类型 scalar"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/graphql-custom-types",rel:"noopener noreferrer",target:"_blank",children:"https://www.npmjs.com/package/graphql-custom-types"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"scalar DataTime\ntype Photo {\n  id: ID!\n  name: String!\n  url: String!\n  description: String\n  created: DateTime!\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'import { GraphQLScalarType } from "graphql";\n\nconst myCustomScalarType = new GraphQLScalarType({\n  name: "MyCustomScalar",\n  description: "Description of my custom scalar type",\n  serialize(value) {\n    let result;\n    // 从服务端发送给客户端的数据\n    return result;\n  },\n  parseValue(value) {\n    // 从客户端接收的数据\n    let result;\n    return result;\n  },\n  parseLiteral(ast) {\n    switch (ast.kind) {\n    }\n  },\n});\n\nconst schemaString = `\nscalar MyCustomScalar\n\ntype Foo {\n  aField: MyCustomScalar\n}\n\ntype Query {\n  foo: Foo\n}\n`;\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"枚举-enum",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#枚举-enum",children:"#"}),"枚举 enum"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-graphql",children:"enum PhotoCategory {\n  SELFIE\n  PORTRAIT\n  ACTION\n  LANDSCAPE\n  GRAPHIC\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"列表-list",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#列表-list",children:"#"}),"列表 list"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"[String]\n[Int] # 可空的整数值列表\n# [] => ok, [null,1,2] => ok\n[Int!] # 不可空的整数值列表\n# [] => ok, [null,1,2] => error\n[Int]! # 可空的整数值非空列表\n# [] => error, [null,1,2] => ok\n[Int!]! # 不可空的整数值非空列表\n# [] => error, [null,1,2] => error\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"连接-linked",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#连接-linked",children:"#"}),"连接 Linked"]}),"\n",(0,a.jsxs)(n.h4,{id:"一对一",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#一对一",children:"#"}),"一对一"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"type User {\n	username: ID!\n	name: String\n	avatar: String\n}\ntype Photo {\n	id: ID!\n	url: String!\n	description: String\n	created: DateTime!\n	postedBy: User!\n}\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"一对多",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#一对多",children:"#"}),"一对多"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"type User {\n	username: ID!\n	name: String\n	avatar: String\n	photos: [Photo!]\n}\ntype Photo {\n	id: ID!\n	url: String!\n	description: String\n	created: DateTime!\n	postedBy: User!\n}\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"多对多",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#多对多",children:"#"}),"多对多？？"]}),"\n",(0,a.jsxs)(n.h4,{id:"直通类型",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#直通类型",children:"#"}),"直通类型"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"type User {\n	username: ID!\n	name: String\n	avatar: String\n}\ntype User {\n	friends [User!]!\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"联合类型-union-type",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#联合类型-union-type",children:"#"}),"联合类型 union type"]}),"\n",(0,a.jsxs)(n.h3,{id:"接口-interface",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#接口-interface",children:"#"}),"接口 interface"]}),"\n",(0,a.jsxs)(n.h3,{id:"参数-argument",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参数-argument",children:"#"}),"参数 argument"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"type Query {\n	# 查询\n	User(id: ID!): User!\n	# 筛选\n	allPhotos(category: PhotoCategory): [Photo!]!\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"",children:(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#",children:"#"})}),"\n",(0,a.jsxs)(n.h3,{id:"输入",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#输入",children:"#"}),"输入"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(s,e)})):s(e)}let h=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["note%2Fgraphql%2Fschema.md"]={toc:[{id:"type",text:"TYPE",depth:3},{id:"标量类型-scalar",text:"标量类型 scalar",depth:3},{id:"枚举-enum",text:"枚举 enum",depth:3},{id:"列表-list",text:"列表 list",depth:3},{id:"连接-linked",text:"连接 Linked",depth:3},{id:"一对一",text:"一对一",depth:4},{id:"一对多",text:"一对多",depth:4},{id:"多对多",text:"多对多？？",depth:4},{id:"直通类型",text:"直通类型",depth:4},{id:"联合类型-union-type",text:"联合类型 union type",depth:3},{id:"接口-interface",text:"接口 interface",depth:3},{id:"参数-argument",text:"参数 argument",depth:3},{id:"",text:"",depth:4},{id:"输入",text:"输入",depth:3}],title:"SCHEMA",headingTitle:"SCHEMA",frontmatter:{}}}}]);