"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["1851"],{8042:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var t=r(5893),s=r(65);function o(e){let n=Object.assign({h1:"h1",a:"a",h3:"h3",ul:"ul",li:"li",pre:"pre",code:"code",p:"p"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"indexeddb",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#indexeddb",children:"#"}),"IndexedDB"]}),"\n",(0,t.jsxs)(n.h3,{id:"特点",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#特点",children:"#"}),"特点"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"键值对储存。"}),"\n",(0,t.jsx)(n.li,{children:"异步"}),"\n",(0,t.jsx)(n.li,{children:"支持事物(transaction)"}),"\n",(0,t.jsx)(n.li,{children:"同源限制"}),"\n",(0,t.jsx)(n.li,{children:"储存空间大"}),"\n",(0,t.jsx)(n.li,{children:"支持二进制"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"基本概念",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基本概念",children:"#"}),"基本概念"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"数据库：IDBDatabase 对象"}),"\n",(0,t.jsx)(n.li,{children:"对象仓库：IDBObjectStore 对象"}),"\n",(0,t.jsx)(n.li,{children:"索引： IDBIndex 对象"}),"\n",(0,t.jsx)(n.li,{children:"事务： IDBTransaction 对象"}),"\n",(0,t.jsx)(n.li,{children:"操作请求：IDBRequest 对象"}),"\n",(0,t.jsx)(n.li,{children:"指针： IDBCursor 对象"}),"\n",(0,t.jsx)(n.li,{children:"主键集合：IDBKeyRange 对象"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"打开数据库",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#打开数据库",children:"#"}),"打开数据库"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const request = window.indexedDB.open("dbname", 1);\n// error事件表示打开数据库失败。\nrequest.onerror = function (event) {\n  console.log("数据库打开报错");\n};\n// success事件表示成功打开数据库。\nrequest.onsuccess = function (event) {\n  console.log(request.result);\n  console.log("数据库打开成功");\n};\n// 如果指定的版本号，大于数据库的实际版本号，就会发生数据库升级事件upgradeneeded。\nrequest.onupgradeneeded = function (event) {\n  console.log(event.target.result);\n};\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"新建数据库",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#新建数据库",children:"#"}),"新建数据库"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'request.onupgradeneeded = function (event) {\n  const db = event.target.result;\n  const objectStore = db.createObjectStore("person", { keyPath: "id" });\n\n  // 自动生成主键\n  // const objectStore = db.createObjectStore(\'person\', { autoIncrement: true });\n\n  // 创建索引\n  objectStore.createIndex("name", "name", { unique: false });\n  objectStore.createIndex("email", "email", { unique: true });\n};\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"新增数据",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#新增数据",children:"#"}),"新增数据"]}),"\n",(0,t.jsx)(n.p,{children:"通过 objectStore 对象的 add()方法，向表格写入一条记录。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function add() {\n  var request = db\n    .transaction(["person"], "readwrite")\n    .objectStore("person")\n    .add({ id: 1, name: "张三", age: 24, email: "zhangsan@example.com" });\n\n  request.onsuccess = function (event) {\n    console.log("数据写入成功");\n  };\n\n  request.onerror = function (event) {\n    console.log("数据写入失败");\n  };\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"读取数据",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#读取数据",children:"#"}),"读取数据"]}),"\n",(0,t.jsx)(n.p,{children:"读取数据也是通过事务完成。 objectStore.get()方法用于读取数据，参数是主键的值。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function read() {\n  var transaction = db.transaction(["person"]);\n  var objectStore = transaction.objectStore("person");\n  var request = objectStore.get(1);\n\n  request.onerror = function (event) {\n    console.log("事务失败");\n  };\n\n  request.onsuccess = function (event) {\n    if (request.result) {\n      console.log(request.result);\n    } else {\n      console.log("未获得数据记录");\n    }\n  };\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"遍历数据",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#遍历数据",children:"#"}),"遍历数据"]}),"\n",(0,t.jsx)(n.p,{children:"新建指针对象的 openCursor()方法是一个异步操作，所以要监听 success 事件。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function readAll() {\n  var objectStore = db.transaction("person").objectStore("person");\n\n  objectStore.openCursor().onsuccess = function (event) {\n    var cursor = event.target.result;\n\n    if (cursor) {\n      console.log(cursor);\n      cursor.continue();\n    } else {\n      console.log("没有更多数据了！");\n    }\n  };\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"更新数据",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#更新数据",children:"#"}),"更新数据"]}),"\n",(0,t.jsx)(n.p,{children:"put()方法自动更新了主键为 1 的记录。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function update() {\n  var request = db\n    .transaction(["person"], "readwrite")\n    .objectStore("person")\n    .put({ id: 1, name: "李四", age: 35, email: "lisi@example.com" });\n\n  request.onsuccess = function (event) {\n    console.log("数据更新成功");\n  };\n\n  request.onerror = function (event) {\n    console.log("数据更新失败");\n  };\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"删除数据",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#删除数据",children:"#"}),"删除数据"]}),"\n",(0,t.jsx)(n.p,{children:"IDBObjectStore.delete()方法用于删除记录。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'function remove() {\n  var request = db.transaction(["person"], "readwrite").objectStore("person").delete(1);\n\n  request.onsuccess = function (event) {\n    console.log("数据删除成功");\n  };\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"使用索引",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用索引",children:"#"}),"使用索引"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'var transaction = db.transaction(["person"], "readonly");\nvar store = transaction.objectStore("person");\nvar index = store.index("name");\nvar request = index.get("李四");\n\nrequest.onsuccess = function (e) {\n  var result = e.target.result;\n  if (result) {\n    // ...\n  } else {\n    // ...\n  }\n};\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"html",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"}),"html"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n  </head>\n\n  <body>\n    <div id="app">\n      <button class="add">add</button>\n      <button class="get">get</button>\n      <button class="getall">getall</button>\n\n      <button class="put">put</button>\n\n      <button class="del">del</button>\n    </div>\n    <script src="https://code.jquery.com/jquery-3.5.0.min.js"><\/script>\n    <script>\n      $(function () {\n        let db;\n\n        const request = window.indexedDB.open("dbname", 2);\n        // error事件表示打开数据库失败。\n        request.onerror = function (event) {\n          console.log("数据库打开报错");\n        };\n        // success事件表示成功打开数据库。\n        request.onsuccess = function (event) {\n          db = request.result;\n          console.log(request.result);\n          console.log("数据库打开成功");\n        };\n        // 如果指定的版本号，大于数据库的实际版本号，就会发生数据库升级事件upgradeneeded。\n        request.onupgradeneeded = function (event) {\n          console.log(event.target.result);\n          db = event.target.result;\n          if (!db.objectStoreNames.contains("person")) {\n            const objectStore = db.createObjectStore("person", { keyPath: "id" });\n            objectStore.createIndex("name", "name", { unique: false });\n            objectStore.createIndex("email", "email", { unique: true });\n          }\n          console.log(111);\n        };\n\n        $(".add").click(function () {\n          let req = db\n            .transaction(["person"], "readwrite")\n            .objectStore("person")\n            .add({ id: new Date().getTime(), name: "张三", age: 24, email: `${new Date().getTime()}+a@.com` });\n\n          req.onsuccess = function (event) {\n            console.log("数据写入成功");\n          };\n\n          req.onerror = function (event) {\n            console.log("数据写入失败");\n          };\n        });\n\n        $(".get").click(function () {\n          var transaction = db.transaction(["person"]);\n          var objectStore = transaction.objectStore("person");\n          var req = objectStore.get(1);\n\n          req.onerror = function (event) {\n            console.log("事务失败");\n          };\n\n          req.onsuccess = function (event) {\n            if (req.result) {\n              console.log(req.result);\n            } else {\n              console.log("未获得数据记录");\n            }\n          };\n        });\n\n        $(".getall").click(function () {\n          var objectStore = db.transaction(["person"], "readwrite").objectStore("person");\n\n          objectStore.openCursor().onsuccess = function (event) {\n            var cursor = event.target.result;\n\n            if (cursor) {\n              console.log(cursor);\n              cursor.continue();\n            } else {\n              console.log("没有更多数据了！");\n            }\n          };\n        });\n\n        $(".put").click(function () {\n          var req = db.transaction(["person"], "readwrite").objectStore("person").put({ id: 1, name: "李四" });\n\n          req.onsuccess = function (event) {\n            console.log("数据更新成功");\n          };\n\n          req.onerror = function (event) {\n            console.log("数据更新失败");\n          };\n        });\n\n        $(".del").click(function () {\n          var req = db.transaction(["person"], "readwrite").objectStore("person").delete(1587451687741);\n\n          req.onsuccess = function (event) {\n            console.log("数据删除成功");\n          };\n        });\n      });\n    <\/script>\n  </body>\n</html>\n'})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}let a=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["web%2Fhtml%2FindexedDB.md"]={toc:[{id:"特点",text:"特点",depth:3},{id:"基本概念",text:"基本概念",depth:3},{id:"打开数据库",text:"打开数据库",depth:3},{id:"新建数据库",text:"新建数据库",depth:3},{id:"新增数据",text:"新增数据",depth:3},{id:"读取数据",text:"读取数据",depth:3},{id:"遍历数据",text:"遍历数据",depth:3},{id:"更新数据",text:"更新数据",depth:3},{id:"删除数据",text:"删除数据",depth:3},{id:"使用索引",text:"使用索引",depth:3},{id:"html",text:"html",depth:3}],title:"IndexedDB",headingTitle:"IndexedDB",frontmatter:{}}}}]);