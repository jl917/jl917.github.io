"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["9828"],{6708:function(e,n,t){t.r(n),t.d(n,{default:()=>l});var s=t(5893),i=t(65);function o(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"职责链模式chain-of-responsibility",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#职责链模式chain-of-responsibility",children:"#"}),"职责链模式(Chain of Responsibility)"]}),"\n",(0,s.jsx)(n.p,{children:"通过为多个对象提供处理请求的机会，避免将请求的发送者耦合到其接收者。 链接接收对象并沿链传递请求，直到对象处理它。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'class Request {\n  constructor(amount) {\n    this.amount = amount;\n    console.log("Requested: $" + amount + "\\n");\n  }\n\n  get(bill) {\n    const count = Math.floor(this.amount / bill);\n    this.amount -= count * bill;\n    console.log("Dispense " + count + " $" + bill + " bills");\n    return this;\n  }\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const request = new Request(378);\nrequest.get(100).get(50).get(20).get(10).get(5).get(1);\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}let l=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["algorithm%2Fpattern%2F13.md"]={toc:[],title:"职责链模式(Chain of Responsibility)",headingTitle:"职责链模式(Chain of Responsibility)",frontmatter:{}}}}]);