"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["5286"],{92108:function(e,n,r){r.r(n);var c=r(85893),s=r(50065);function t(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",ul:"ul",li:"li",h3:"h3",p:"p"},(0,s.ah)(),e.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"zeromq",children:[(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#zeromq",children:"#"}),"zeromq"]}),"\n",(0,c.jsxs)(n.h2,{id:"\uC124\uCE58",children:[(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#\uC124\uCE58",children:"#"}),"\uC124\uCE58"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",meta:"",children:"brew install zeromq\ncurve_keygen\n# or(\uC544\uB798 \uACC4\uC18D)\nnpm install zeromq\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",meta:"",children:'const zmq = require("zeromq");\n\nconst { publicKey, secretKey } = zmq.curveKeyPair();\nconsole.log("Public Key:", publicKey);\nconsole.log("Secret Key:", secretKey);\n'})}),"\n",(0,c.jsxs)(n.h2,{id:"\uC885\uB958",children:[(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#\uC885\uB958",children:"#"}),"\uC885\uB958"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"push/pull"}),"\n",(0,c.jsx)(n.li,{children:"pub/sub"}),"\n",(0,c.jsx)(n.li,{children:"req/rep"}),"\n"]}),"\n",(0,c.jsxs)(n.h2,{id:"\uC0AC\uC6A9reqrep",children:[(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#\uC0AC\uC6A9reqrep",children:"#"}),"\uC0AC\uC6A9(req/rep)"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",meta:"",children:'// server.js\nconst zmq = require("zeromq");\n\n(async () => {\n  const server = new zmq.Reply();\n\n  // \uC11C\uBC84\uC758 CurveZMQ \uD0A4\n  const serverPublicKey = "<\uC11C\uBC84 \uACF5\uAC1C \uD0A4>";\n  const serverSecretKey = "<\uC11C\uBC84 \uBE44\uBC00 \uD0A4>";\n\n  // \uC11C\uBC84 \uC124\uC815\n  server.curveServer = true;\n  server.curvePublicKey = serverPublicKey;\n  server.curveSecretKey = serverSecretKey;\n\n  await server.bind("tcp://*:5555");\n  console.log("Server started on port 5555");\n\n  for await (const [msg] of server) {\n    console.log("Received:", msg.toString());\n    server.send("Hello, Client!");\n  }\n})();\n\n// client.js\nconst zmq = require("zeromq");\n\n(async () => {\n  const client = new zmq.Request();\n\n  // \uD074\uB77C\uC774\uC5B8\uD2B8\uC758 CurveZMQ \uD0A4\n  const clientPublicKey = "<\uD074\uB77C\uC774\uC5B8\uD2B8 \uACF5\uAC1C \uD0A4>";\n  const clientSecretKey = "<\uD074\uB77C\uC774\uC5B8\uD2B8 \uBE44\uBC00 \uD0A4>";\n\n  // \uC11C\uBC84\uC758 \uACF5\uAC1C \uD0A4\n  const serverPublicKey = "<\uC11C\uBC84 \uACF5\uAC1C \uD0A4>";\n\n  client.curvePublicKey = clientPublicKey;\n  client.curveSecretKey = clientSecretKey;\n  client.curveServerKey = serverPublicKey;\n\n  client.connect("tcp://127.0.0.1:5555");\n  console.log("Client connected to server");\n\n  await client.send("Hello, Server!");\n  const [reply] = await client.receive();\n  console.log("Reply from server:", reply.toString());\n})();\n'})}),"\n",(0,c.jsxs)(n.h3,{id:"function-curvekeypair",children:[(0,c.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#function-curvekeypair",children:"#"}),"Function curveKeyPair"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://zeromq.github.io/zeromq.js/functions/curveKeyPair.html",target:"_blank",rel:"noopener noreferrer",children:"curveKeyPair"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,c.jsx)(n,Object.assign({},e,{children:(0,c.jsx)(t,e)})):t(e)}n.default=i,i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["tools%2Fzeromq.md"]={toc:[{id:"\uC124\uCE58",text:"\uC124\uCE58",depth:2},{id:"\uC885\uB958",text:"\uC885\uB958",depth:2},{id:"\uC0AC\uC6A9reqrep",text:"\uC0AC\uC6A9(req/rep)",depth:2},{id:"function-curvekeypair",text:"Function curveKeyPair",depth:3}],title:"zeromq",frontmatter:{}}}}]);