"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["5667"],{9966:function(e,n,a){a.r(n),a.d(n,{default:()=>c});var s=a(5893),r=a(65);function t(e){let n=Object.assign({h4:"h4",a:"a",pre:"pre",code:"code"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h4,{id:"使用-reactmemo-来缓存组件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-reactmemo-来缓存组件",children:"#"}),"使用 React.Memo 来缓存组件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"export default React.memo(<Component />)\nexport default Rect.memo((props) => {\n  return <div>{props.value}</div>\n})\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-usememo-usecallback-缓存大量的计算",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-usememo-usecallback-缓存大量的计算",children:"#"}),"使用 useMemo, useCallback 缓存大量的计算,"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const Component = () => {\n  const val = useMemo(() => 123, []);\n  const click = useCallback(() => {\n    // balabala~\n  });\n  return <div onClick={click}>{val}</div>;\n};\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-purecomponent",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-purecomponent",children:"#"}),"使用 PureComponent"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function PureComponent(){\n  return <div>PureComponent</div>\n}\nclass Component extends React.PureComponent{\n  ........\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"避免使用内联对象",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#避免使用内联对象",children:"#"}),"避免使用内联对象"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const styles = { margin: 0 };\nconst aProp = { someProp: 'someValue' }\n// Don't do this!\n<AnotherComponent style={{ margin: 0 }} aProp={aProp} />\n// Do this instead :)\n<AnotherComponent style={styles} {...aProp} />\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"避免使用匿名函数",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#避免使用匿名函数",children:"#"}),"避免使用匿名函数"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Don't do this!\n<AnotherComponent onChange={() => props.callback(props.id)} />\n// Do this instead :)\n<AnotherComponent onChange={handleChange} />\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"调整-css-而不是强制组件加载和卸载",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调整-css-而不是强制组件加载和卸载",children:"#"}),"调整 CSS 而不是强制组件加载和卸载"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Don't do this!\nview === 'view1' ? <SomeComponent /> : <AnotherComponent />\n// Do this instead :)\n<SomeComponent style={view === 'view1' ? visibleStyles : hiddenStyles}>\n<AnotherComponent style={view !== 'view1' ? visibleStyles : hiddenStyles}>\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-reactfragment-避免添加额外的-dom",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-reactfragment-避免添加额外的-dom",children:"#"}),"使用 React.Fragment 避免添加额外的 DOM"]}),"\n",(0,s.jsxs)(n.h4,{id:"延迟加载不是立即需要的组件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#延迟加载不是立即需要的组件",children:"#"}),"延迟加载不是立即需要的组件"]}),"\n",(0,s.jsxs)(n.h4,{id:"immutable",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#immutable",children:"#"}),"Immutable"]}),"\n",(0,s.jsxs)(n.h4,{id:"key",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#key",children:"#"}),"key"]}),"\n",(0,s.jsxs)(n.h4,{id:"reselect",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#reselect",children:"#"}),"reselect"]}),"\n",(0,s.jsxs)(n.h4,{id:"使用-reactmemo-来缓存组件-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-reactmemo-来缓存组件-1",children:"#"}),"使用 React.Memo 来缓存组件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"export default React.memo(<Component />)\nexport default Rect.memo((props) => {\n  return <div>{props.value}</div>\n})\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-usememo-usecallback-缓存大量的计算-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-usememo-usecallback-缓存大量的计算-1",children:"#"}),"使用 useMemo, useCallback 缓存大量的计算,"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const Component = () => {\n  const val = useMemo(() => 123, []);\n  const click = useCallback(() => {\n    // balabala~\n  });\n  return <div onClick={click}>{val}</div>;\n};\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-purecomponent-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-purecomponent-1",children:"#"}),"使用 PureComponent"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function PureComponent(){\n  return <div>PureComponent</div>\n}\nclass Component extends React.PureComponent{\n  ........\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"避免使用内联对象-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#避免使用内联对象-1",children:"#"}),"避免使用内联对象"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const styles = { margin: 0 };\nconst aProp = { someProp: 'someValue' }\n// Don't do this!\n<AnotherComponent style={{ margin: 0 }} aProp={aProp} />\n// Do this instead :)\n<AnotherComponent style={styles} {...aProp} />\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"避免使用匿名函数-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#避免使用匿名函数-1",children:"#"}),"避免使用匿名函数"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Don't do this!\n<AnotherComponent onChange={() => props.callback(props.id)} />\n// Do this instead :)\n<AnotherComponent onChange={handleChange} />\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"调整-css-而不是强制组件加载和卸载-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调整-css-而不是强制组件加载和卸载-1",children:"#"}),"调整 CSS 而不是强制组件加载和卸载"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// Don't do this!\nview === 'view1' ? <SomeComponent /> : <AnotherComponent />\n// Do this instead :)\n<SomeComponent style={view === 'view1' ? visibleStyles : hiddenStyles}>\n<AnotherComponent style={view !== 'view1' ? visibleStyles : hiddenStyles}>\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"使用-reactfragment-避免添加额外的-dom-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-reactfragment-避免添加额外的-dom-1",children:"#"}),"使用 React.Fragment 避免添加额外的 DOM"]}),"\n",(0,s.jsxs)(n.h4,{id:"延迟加载不是立即需要的组件-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#延迟加载不是立即需要的组件-1",children:"#"}),"延迟加载不是立即需要的组件"]}),"\n",(0,s.jsxs)(n.h4,{id:"immutable-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#immutable-1",children:"#"}),"Immutable"]}),"\n",(0,s.jsxs)(n.h4,{id:"key-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#key-1",children:"#"}),"key"]}),"\n",(0,s.jsxs)(n.h4,{id:"reselect-1",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#reselect-1",children:"#"}),"reselect"]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["note%2Freact%2Fperformance.md"]={toc:[{id:"使用-reactmemo-来缓存组件",text:"使用 React.Memo 来缓存组件",depth:4},{id:"使用-usememo-usecallback-缓存大量的计算",text:"使用 useMemo, useCallback 缓存大量的计算,",depth:4},{id:"使用-purecomponent",text:"使用 PureComponent",depth:4},{id:"避免使用内联对象",text:"避免使用内联对象",depth:4},{id:"避免使用匿名函数",text:"避免使用匿名函数",depth:4},{id:"调整-css-而不是强制组件加载和卸载",text:"调整 CSS 而不是强制组件加载和卸载",depth:4},{id:"使用-reactfragment-避免添加额外的-dom",text:"使用 React.Fragment 避免添加额外的 DOM",depth:4},{id:"延迟加载不是立即需要的组件",text:"延迟加载不是立即需要的组件",depth:4},{id:"immutable",text:"Immutable",depth:4},{id:"key",text:"key",depth:4},{id:"reselect",text:"reselect",depth:4},{id:"使用-reactmemo-来缓存组件-1",text:"使用 React.Memo 来缓存组件",depth:4},{id:"使用-usememo-usecallback-缓存大量的计算-1",text:"使用 useMemo, useCallback 缓存大量的计算,",depth:4},{id:"使用-purecomponent-1",text:"使用 PureComponent",depth:4},{id:"避免使用内联对象-1",text:"避免使用内联对象",depth:4},{id:"避免使用匿名函数-1",text:"避免使用匿名函数",depth:4},{id:"调整-css-而不是强制组件加载和卸载-1",text:"调整 CSS 而不是强制组件加载和卸载",depth:4},{id:"使用-reactfragment-避免添加额外的-dom-1",text:"使用 React.Fragment 避免添加额外的 DOM",depth:4},{id:"延迟加载不是立即需要的组件-1",text:"延迟加载不是立即需要的组件",depth:4},{id:"immutable-1",text:"Immutable",depth:4},{id:"key-1",text:"key",depth:4},{id:"reselect-1",text:"reselect",depth:4}],title:"",headingTitle:"",frontmatter:{}}}}]);